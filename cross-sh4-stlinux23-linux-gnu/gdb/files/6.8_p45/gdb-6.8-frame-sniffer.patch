Patch from Frédéric Riss <frederic.riss@st.com> to prevent frame sniffer
reads of 0xa0000000, which can cause problems in SE mode.

Signed-off-by: Chris Smith <chris.smith@st.com>

Index: gdb-6.8/gdb/sh-linux-tdep.c
===================================================================
--- gdb-6.8.orig/gdb/sh-linux-tdep.c	2008-09-18 13:14:18.000000000 +0100
+++ gdb-6.8/gdb/sh-linux-tdep.c	2008-09-18 13:14:26.000000000 +0100
@@ -286,7 +286,15 @@
 sh_linux_sigtramp_p (struct frame_info *next_frame)
 {
   CORE_ADDR pc = frame_pc_unwind (next_frame);
-  struct symbol *symbol = find_pc_function(pc);
+  struct symbol *symbol = NULL;
+
+  /* We don't want to look for a sigtramp frame at boot
+     time. If the memory mappings are such that a kernel stack could be
+     at 0xA0000000, this will break. */
+  if (pc == 0xA0000000)
+      return 0;
+
+  symbol = find_pc_function(pc);
 
   /* If symbolic lookup of the PC matches a symbol of function type then
    * it cannot be a signal trampoline since (on SH) these are always found
