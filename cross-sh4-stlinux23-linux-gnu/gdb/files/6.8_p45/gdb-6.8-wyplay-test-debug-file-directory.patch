This test checks that once gdb-6.8-wyplay-fix-debug-file-directory.patch
has been applied, it is possible to use the "set debug-file-directory"
command in a genbox context by specifying:
set debug-file-directory /usr/targets/current/root/usr/lib/debug

--- gdb.orig/testsuite/gdb.wyplay/solib-symbol-lib.c	1970-01-01 01:00:00.000000000 +0100
+++ gdb/testsuite/gdb.wyplay/solib-symbol-lib.c	2010-12-01 13:01:09.841176629 +0100
@@ -0,0 +1,31 @@
+/* Copyright 2007, 2008 Free Software Foundation, Inc.
+   This program is free software; you can redistribute it and/or modify
+   it under the terms of the GNU General Public License as published by
+   the Free Software Foundation; either version 3 of the License, or
+   (at your option) any later version.
+
+   This program is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+   GNU General Public License for more details.
+
+   You should have received a copy of the GNU General Public License
+   along with this program.  If not, see <http://www.gnu.org/licenses/>.
+
+   Contributed by Markus Deuling <deuling@de.ibm.com>.
+*/
+#include <stdio.h>
+
+void
+foo ()
+{
+  printf ("foo in lib\n");
+  return;
+}
+
+void
+foo2()
+{
+  printf ("foo2 in lib\n");
+  return;
+}
--- gdb.orig/testsuite/gdb.wyplay/solib-symbol-main.c	1970-01-01 01:00:00.000000000 +0100
+++ gdb/testsuite/gdb.wyplay/solib-symbol-main.c	2010-12-01 13:01:09.841176629 +0100
@@ -0,0 +1,42 @@
+/* Copyright 2007, 2008 Free Software Foundation, Inc.
+   This program is free software; you can redistribute it and/or modify
+   it under the terms of the GNU General Public License as published by
+   the Free Software Foundation; either version 3 of the License, or
+   (at your option) any later version.
+
+   This program is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+   GNU General Public License for more details.
+
+   You should have received a copy of the GNU General Public License
+   along with this program.  If not, see <http://www.gnu.org/licenses/>.
+
+   Contributed by Markus Deuling <deuling@de.ibm.com>.
+*/
+#include <stdio.h>
+
+extern void foo();
+void foo3();
+void foo2();
+
+int main ()
+{
+  printf ("in main\n");
+  foo ();
+  foo3 ();
+  return 0;
+}
+
+void foo3()
+{
+  printf ("foo3 in main\n");
+  return;
+}
+
+void foo2()
+{
+  printf ("foo2 in main\n");
+  return;
+}
+
--- gdb.orig/testsuite/gdb.wyplay/solib-symbol.exp	1970-01-01 01:00:00.000000000 +0100
+++ gdb/testsuite/gdb.wyplay/solib-symbol.exp	2010-12-01 13:01:09.841176629 +0100
@@ -0,0 +1,97 @@
+# Testing of:
+#  - compilation of main + .so lib
+#  - separation of debug symbols in a .debug + strip of main executable
+#  - deployment of both .debug file and executable and lib files in target zone
+#  - use of the solib-absolute-prefix and debug-file-directory variables
+#  - finally that debug symbols are found by GDB using a Set Breakpoint at
+#    a function specified by its symbol.
+#
+# Note: should only PASS when "gdb-6.8-wyplay-fix-debug-file-directory.patch"
+# has been applied.
+#
+
+if {[skip_shlib_tests]} {
+    return 0
+}
+
+# Library file.
+set libname "solib-symbol-lib"
+set srcfile_lib ${srcdir}/${subdir}/${libname}.c
+set binfile_lib ${objdir}/${subdir}/${libname}.so
+set lib_flags [list debug ldflags=-Wl,-Bsymbolic]
+# Binary file.
+set testfile "solib-symbol-main"
+set srcfile ${srcdir}/${subdir}/${testfile}.c
+set binfile ${objdir}/${subdir}/${testfile}
+set bin_flags [list debug shlib=${binfile_lib}]
+
+if [get_compiler_info ${binfile}] {
+    return -1
+}
+
+if { [gdb_compile_shlib ${srcfile_lib} ${binfile_lib} $lib_flags] != ""
+     || [gdb_compile ${srcfile} ${binfile} executable $bin_flags] != "" } {
+    untested "Could not compile $binfile_lib or $binfile."
+    return -1
+}
+
+# We want to test "set debug-file-directory" in a target deployment context
+set targetsroot "/usr/targets/current/root"
+if [ file exist ${targetsroot} ] {
+    verbose "Testing split-debug when deployed in a targets zone..."
+} else {
+    untested "Could not find ${targetsroot}. Please create a target first"
+    return -1
+}
+
+gdb_exit
+gdb_start
+gdb_reinitialize_dir $srcdir/$subdir
+
+# replace "load binfile" with load of a stripped version
+###gdb_load ${binfile}
+
+# 1. separate between binfile and binfile.debug (in ./debug)
+if [gdb_gnu_strip_debug ${binfile}] {
+    # check that you have a cross compilation version of strip and objcopy
+    unsupported "cannot produce separate debug info files"
+    return -1
+}
+
+# 2. strip binfile
+gdb_test "shell [transform strip] ${binfile}"
+
+# 3. move both binfile and binfile.debug to ${targetsroot}
+gdb_test "shell mkdir -p ${targetsroot}/usr/lib/debug/usr/bin/" "" ""
+gdb_test "shell mv [separate_debug_filename ${binfile}] ${targetsroot}/usr/lib/debug/usr/bin/" "" ""
+gdb_test "shell mkdir -p ${targetsroot}/usr/bin/" "" ""
+gdb_test "shell mv ${binfile} ${targetsroot}/usr/bin/" "" ""
+
+# 4. send "set <variables>" commands to running gdb to specify targets dirs
+gdb_test "set debug-file-directory /usr/targets/current/root/usr/lib/debug" "" "debug-file-directory setting test"
+gdb_test "set solib-absolute-prefix /usr/targets/current/root" "" "solib setting test"
+
+# 5. actual load
+gdb_file_cmd "${targetsroot}/usr/bin/[file tail ${binfile}]"
+
+# 6. print "symbols found" state. The tree possible states are:
+#   a) debug (has found debug information)
+#   b) nodebug (has not found debug information) and
+#   c) fail (has not loaded correctly)
+puts "*** Symbols found = $gdb_file_cmd_debug_info ***"
+
+# Some misc gdb test: load .so and set breakpoint
+# Note: the breakpoint will fail when no symbols can be found
+gdb_load_shlibs $binfile_lib
+
+gdb_test "cont" ".*"
+
+# Set a breakpoint in the binary.
+gdb_test "br foo2" \
+    "Breakpoint.*file.*${srcfile}.*" \
+    "breakpoint foo2 in main"
+
+gdb_exit
+
+return 0
+
