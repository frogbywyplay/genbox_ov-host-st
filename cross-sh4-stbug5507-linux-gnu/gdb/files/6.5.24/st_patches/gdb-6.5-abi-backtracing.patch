Patches to handle prologue analyzer failures better.

Signed-off-by: Chris Smith <chris.smith@st.com>
Index: gdb-6.5/gdb/linux-awareness.c
===================================================================
--- gdb-6.5.orig/gdb/linux-awareness.c	2007-10-08 15:40:44.000000000 +0100
+++ gdb-6.5/gdb/linux-awareness.c	2007-10-08 15:40:53.000000000 +0100
@@ -5226,6 +5226,18 @@
        we'll get duplicate entries.*/
     current_user_process = user_process;
     switch_to_user_process (ps);
+
+    if (ps->tgid != ps->pid) {
+	/* This is a thread. The backtrace should stop at 'clone'.
+	   We can't use set_main_name, because this name will only be
+	   looked up in the main binary and 'clone' is in the
+	   libc. Instead, we put clone's address in the entry point
+	   field of the binary which serves as another backtracing
+	   stop mechanism. Yeah, quite hackish, but this works :-) */
+	struct minimal_symbol *sym = lookup_minimal_symbol_text ("clone", NULL);
+	if (sym != NULL)
+	    objfiles->ei.entry_point = SYMBOL_VALUE_ADDRESS (sym);
+    }
 }
 
 static void restore_breakpoints (void *bps)
Index: gdb-6.5/gdb/frame.c
===================================================================
--- gdb-6.5.orig/gdb/frame.c	2007-09-19 17:57:38.000000000 +0100
+++ gdb-6.5/gdb/frame.c	2007-10-08 15:40:53.000000000 +0100
@@ -1095,8 +1095,13 @@
      are, there is most likely a stack cycle.  As with the inner-than
      test above, avoid comparing the inner-most and sentinel frames.  */
   if (this_frame->level > 0
-      && frame_id_eq (this_id, get_frame_id (this_frame->next)))
-    error (_("Previous frame identical to this frame (corrupt stack?)"));
+      && frame_id_eq (this_id, get_frame_id (this_frame->next))) {
+    /* This error happens a lot at the end of incomplete but otherwise valid
+       backtraces on sh. Using printf_filtered() makes it appear less alarming
+       in frontends. */
+    printf_filtered (_("Previous frame identical to this frame (corrupt stack?)"));
+    error(_(""));
+  }
 
   /* Allocate the new frame but do not wire it in to the frame chain.
      Some (bad) code in INIT_FRAME_EXTRA_INFO tries to look along
