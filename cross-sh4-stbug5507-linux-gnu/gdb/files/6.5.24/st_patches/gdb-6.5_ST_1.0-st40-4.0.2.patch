Index: gdb-6.5/bfd/archures.c
===================================================================
--- gdb-6.5.orig/bfd/archures.c	2007-09-18 17:03:23.000000000 +0100
+++ gdb-6.5/bfd/archures.c	2007-09-18 17:03:27.000000000 +0100
@@ -3,6 +3,7 @@
    2000, 2001, 2002, 2003, 2004, 2005, 2006
    Free Software Foundation, Inc.
    Hacked by John Gilmore and Steve Chamberlain of Cygnus Support.
+   Copyright (c) 2006  STMicroelectronics.
 
    This file is part of BFD, the Binary File Descriptor library.
 
@@ -251,6 +252,11 @@
 .#define bfd_mach_sh4        0x40
 .#define bfd_mach_sh4_nofpu  0x41
 .#define bfd_mach_sh4_nommu_nofpu  0x42
+.#define bfd_mach_st40_300   0x430
+.#define bfd_mach_st40_300_nofpu 0x431
+.#define bfd_mach_st40_300_nofpu_or_sh2a_nofpu 0x432
+.#define bfd_mach_st40_300_nofpu_or_sh4a_nofpu 0x433
+.#define bfd_mach_st40_300_or_sh4a 0x434
 .#define bfd_mach_sh4a       0x4a
 .#define bfd_mach_sh4a_nofpu 0x4b
 .#define bfd_mach_sh4al_dsp  0x4d
Index: gdb-6.5/bfd/bfd.c
===================================================================
--- gdb-6.5.orig/bfd/bfd.c	2007-09-18 17:03:23.000000000 +0100
+++ gdb-6.5/bfd/bfd.c	2007-09-18 17:03:27.000000000 +0100
@@ -793,6 +793,7 @@
        BFD_VERSION_STRING, file, line);
   (*_bfd_error_handler) (_("Please report this bug.\n"));
   _exit (EXIT_FAILURE);
+  exit(EXIT_FAILURE);  /* Make sure the compiler knows this doesn't return.  */
 }
 
 /*
Index: gdb-6.5/bfd/bfd-in2.h
===================================================================
--- gdb-6.5.orig/bfd/bfd-in2.h	2007-09-18 17:03:23.000000000 +0100
+++ gdb-6.5/bfd/bfd-in2.h	2007-09-18 17:03:27.000000000 +0100
@@ -10,6 +10,7 @@
    Copyright 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998,
    1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006
    Free Software Foundation, Inc.
+   Copyright (c) 2006  STMicroelectronics.
 
    Contributed by Cygnus Support.
 
@@ -1842,6 +1843,11 @@
 #define bfd_mach_sh4        0x40
 #define bfd_mach_sh4_nofpu  0x41
 #define bfd_mach_sh4_nommu_nofpu  0x42
+#define bfd_mach_st40_300   0x430
+#define bfd_mach_st40_300_nofpu 0x431
+#define bfd_mach_st40_300_nofpu_or_sh2a_nofpu 0x432
+#define bfd_mach_st40_300_nofpu_or_sh4a_nofpu 0x433
+#define bfd_mach_st40_300_or_sh4a 0x434
 #define bfd_mach_sh4a       0x4a
 #define bfd_mach_sh4a_nofpu 0x4b
 #define bfd_mach_sh4al_dsp  0x4d
Index: gdb-6.5/bfd/ChangeLog.st40
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ gdb-6.5/bfd/ChangeLog.st40	2007-09-18 17:03:27.000000000 +0100
@@ -0,0 +1,13 @@
+2006-10-17  Andrew Stubbs  <andrew.stubbs@st.com>
+
+	* bfd.c (_bfd_abort): Add exit to silence a warning from GCC 2.95.2.
+
+2006-03-08  Andrew Stubbs  <andrew.stubbs@st.com>
+
+	* archures.c: Add st40-300 variants.
+	* bfd-in2.h: Likewise.
+	* cpu-sh.c: Likewise.
+
+2006-03-03  Andrew Stubbs  <andrew.stubbs@st.com>
+
+	* po/Make-in: Do the 'chmod -w' after the move. Cygwin prefers it.
Index: gdb-6.5/bfd/cpu-sh.c
===================================================================
--- gdb-6.5.orig/bfd/cpu-sh.c	2007-09-18 17:03:23.000000000 +0100
+++ gdb-6.5/bfd/cpu-sh.c	2007-09-18 17:03:27.000000000 +0100
@@ -2,6 +2,7 @@
    Copyright 1993, 1994, 1997, 1998, 2000, 2001, 2002, 2003, 2004, 2005
    Free Software Foundation, Inc.
    Hacked by Steve Chamberlain of Cygnus Support.
+   Copyright (c) 2006  STMicroelectronics.
 
    This file is part of BFD, the Binary File Descriptor library.
 
@@ -44,6 +45,11 @@
 #define SH2A_NOFPU_OR_SH3_NOMMU_NEXT       arch_info_struct + 17
 #define SH2A_OR_SH4_NEXT                   arch_info_struct + 18
 #define SH2A_OR_SH3E_NEXT                  arch_info_struct + 19
+#define ST40_300_NOFPU_OR_SH2A_NOFPU_NEXT  arch_info_struct + 20
+#define ST40_300_NOFPU_OR_SH4A_NOFPU_NEXT  arch_info_struct + 21
+#define ST40_300_NOFPU_NEXT                arch_info_struct + 22
+#define ST40_300_OR_SH4A_NEXT              arch_info_struct + 23
+#define ST40_300_NEXT                      arch_info_struct + 24
 #define SH64_NEXT                          NULL
 
 static const bfd_arch_info_type arch_info_struct[] =
@@ -315,6 +321,76 @@
     SH2A_OR_SH3E_NEXT
   },
   {
+    32,				/* 32 bits in a word.  */
+    32,				/* 32 bits in an address.  */
+    8,				/* 8 bits in a byte.  */
+    bfd_arch_sh,
+    bfd_mach_st40_300_nofpu_or_sh2a_nofpu,
+    "sh",			/* Architecture name.  */
+    "st40-300-nofpu-or-sh2a-nofpu",		/* Machine name.  */
+    1,
+    FALSE,			/* Not the default.  */
+    bfd_default_compatible,
+    bfd_default_scan,
+    ST40_300_NOFPU_OR_SH2A_NOFPU_NEXT
+  },
+  {
+    32,				/* 32 bits in a word.  */
+    32,				/* 32 bits in an address.  */
+    8,				/* 8 bits in a byte.  */
+    bfd_arch_sh,
+    bfd_mach_st40_300_nofpu_or_sh4a_nofpu,
+    "sh",			/* Architecture name.  */
+    "st40-300-nofpu-or-sh4a-nofpu",		/* Machine name.  */
+    1,
+    FALSE,			/* Not the default.  */
+    bfd_default_compatible,
+    bfd_default_scan,
+    ST40_300_NOFPU_OR_SH4A_NOFPU_NEXT
+  },
+  {
+    32,				/* 32 bits in a word.  */
+    32,				/* 32 bits in an address.  */
+    8,				/* 8 bits in a byte.  */
+    bfd_arch_sh,
+    bfd_mach_st40_300_nofpu,
+    "sh",			/* Architecture name.  */
+    "st40-300-nofpu",		/* Machine name.  */
+    1,
+    FALSE,			/* Not the default.  */
+    bfd_default_compatible,
+    bfd_default_scan,
+    ST40_300_NOFPU_NEXT
+  },
+  {
+    32,				/* 32 bits in a word.  */
+    32,				/* 32 bits in an address.  */
+    8,				/* 8 bits in a byte.  */
+    bfd_arch_sh,
+    bfd_mach_st40_300_or_sh4a,
+    "sh",			/* Architecture name.  */
+    "st40-300-or-sh4a",		/* Machine name.  */
+    1,
+    FALSE,			/* Not the default.  */
+    bfd_default_compatible,
+    bfd_default_scan,
+    ST40_300_OR_SH4A_NEXT
+  },
+  {
+    32,				/* 32 bits in a word.  */
+    32,				/* 32 bits in an address.  */
+    8,				/* 8 bits in a byte.  */
+    bfd_arch_sh,
+    bfd_mach_st40_300,
+    "sh",			/* Architecture name.  */
+    "st40-300",			/* Machine name.  */
+    1,
+    FALSE,			/* Not the default.  */
+    bfd_default_compatible,
+    bfd_default_scan,
+    ST40_300_NEXT
+  },
+  {
     64,				/* 64 bits in a word.  */
     64,				/* 64 bits in an address.  */
     8,				/* 8 bits in a byte.  */
@@ -377,6 +453,12 @@
   { bfd_mach_sh4_nofpu,       arch_sh4_nofpu,       arch_sh4_nofpu_up },
   { bfd_mach_sh4_nommu_nofpu, arch_sh4_nommu_nofpu, arch_sh4_nommu_nofpu_up },
   { bfd_mach_sh4a_nofpu,      arch_sh4a_nofpu,      arch_sh4a_nofpu_up },
+
+  { bfd_mach_st40_300_nofpu_or_sh2a_nofpu,           arch_st40_300_nofpu_or_sh2a_nofpu,	  arch_st40_300_nofpu_or_sh2a_nofpu_up },
+  { bfd_mach_st40_300_nofpu_or_sh4a_nofpu,           arch_st40_300_nofpu_or_sh4a_nofpu,	  arch_st40_300_nofpu_or_sh4a_nofpu_up },
+  { bfd_mach_st40_300_nofpu,  arch_st40_300_nofpu,   arch_st40_300_nofpu_up },
+  { bfd_mach_st40_300_or_sh4a,arch_st40_300_or_sh4a, arch_st40_300_or_sh4a_up },
+  { bfd_mach_st40_300,        arch_st40_300,         arch_st40_300_up },
   { 0, 0, 0 }   /* Terminator.  */
 };
 
Index: gdb-6.5/bfd/doc/archures.texi
===================================================================
--- gdb-6.5.orig/bfd/doc/archures.texi	2007-09-18 17:03:23.000000000 +0100
+++ gdb-6.5/bfd/doc/archures.texi	2007-09-18 17:03:27.000000000 +0100
@@ -217,6 +217,11 @@
 #define bfd_mach_sh4        0x40
 #define bfd_mach_sh4_nofpu  0x41
 #define bfd_mach_sh4_nommu_nofpu  0x42
+#define bfd_mach_st40_300   0x430
+#define bfd_mach_st40_300_nofpu 0x431
+#define bfd_mach_st40_300_nofpu_or_sh2a_nofpu 0x432
+#define bfd_mach_st40_300_nofpu_or_sh4a_nofpu 0x433
+#define bfd_mach_st40_300_or_sh4a 0x434
 #define bfd_mach_sh4a       0x4a
 #define bfd_mach_sh4a_nofpu 0x4b
 #define bfd_mach_sh4al_dsp  0x4d
Index: gdb-6.5/bfd/doc/bfd.info
===================================================================
--- gdb-6.5.orig/bfd/doc/bfd.info	2007-09-18 17:03:26.000000000 +0100
+++ gdb-6.5/bfd/doc/bfd.info	2007-09-18 17:03:27.000000000 +0100
@@ -1,7 +1,5 @@
-This is
-/project/flexdbug/user/pd10/gdb/sts-gdb-repository/trunk/sts-gdb/src/bfd/doc/bfd.info,
-produced by makeinfo version 4.5 from
-/project/flexdbug/user/pd10/gdb/sts-gdb-repository/trunk/sts-gdb/src/bfd/doc/bfd.texinfo.
+This is ../../../src/bfd/doc/bfd.info, produced by makeinfo version 4.5
+from ../../../src/bfd/doc/bfd.texinfo.
 
 START-INFO-DIR-ENTRY
 * Bfd: (bfd).                   The Binary File Descriptor library.
@@ -20,71 +18,71 @@
 
 
 Indirect:
-bfd.info-1: 846
+bfd.info-1: 734
 
 Tag Table:
 (Indirect)
-Node: Top846
-Node: Overview1185
-Node: History2235
-Node: How It Works3176
-Node: What BFD Version 2 Can Do4716
-Node: BFD information loss6026
-Node: Canonical format8549
-Node: BFD front end12910
-Node: Memory Usage38354
-Node: Initialization39577
-Node: Sections40006
-Node: Section Input40484
-Node: Section Output41840
-Node: typedef asection44308
-Node: section prototypes69216
-Node: Symbols78620
-Node: Reading Symbols80210
-Node: Writing Symbols81338
-Node: Mini Symbols83058
-Node: typedef asymbol84023
-Node: symbol handling functions89067
-Node: Archives94196
-Node: Formats97866
-Node: Relocations100745
-Node: typedef arelent101465
-Node: howto manager117302
-Node: Core Files178675
-Node: Targets180411
-Node: bfd_target182374
-Node: Architectures202638
-Node: Opening and Closing223778
-Node: Internal234400
-Node: File Caching240694
-Node: Linker Functions242527
-Node: Creating a Linker Hash Table244193
-Node: Adding Symbols to the Hash Table245920
-Node: Differing file formats246810
-Node: Adding symbols from an object file248543
-Node: Adding symbols from an archive250679
-Node: Performing the Final Link253078
-Node: Information provided by the linker254309
-Node: Relocating the section contents255448
-Node: Writing the symbol table257184
-Node: Hash Tables260132
-Node: Creating and Freeing a Hash Table261323
-Node: Looking Up or Entering a String262562
-Node: Traversing a Hash Table263804
-Node: Deriving a New Hash Table Type264582
-Node: Define the Derived Structures265637
-Node: Write the Derived Creation Routine266703
-Node: Write Other Derived Routines269332
-Node: BFD back ends270632
-Node: What to Put Where270898
-Node: aout271036
-Node: coff277240
-Node: elf301962
-Node: mmo302807
-Node: File layout303730
-Node: Symbol-table309368
-Node: mmo section mapping313163
-Node: GNU Free Documentation License316806
-Node: BFD Index336520
+Node: Top734
+Node: Overview1073
+Node: History2123
+Node: How It Works3064
+Node: What BFD Version 2 Can Do4604
+Node: BFD information loss5914
+Node: Canonical format8437
+Node: BFD front end12798
+Node: Memory Usage38242
+Node: Initialization39465
+Node: Sections39894
+Node: Section Input40372
+Node: Section Output41728
+Node: typedef asection44196
+Node: section prototypes69104
+Node: Symbols78508
+Node: Reading Symbols80098
+Node: Writing Symbols81226
+Node: Mini Symbols82946
+Node: typedef asymbol83911
+Node: symbol handling functions88955
+Node: Archives94084
+Node: Formats97754
+Node: Relocations100633
+Node: typedef arelent101353
+Node: howto manager117190
+Node: Core Files178563
+Node: Targets180299
+Node: bfd_target182262
+Node: Architectures202526
+Node: Opening and Closing223907
+Node: Internal234529
+Node: File Caching240823
+Node: Linker Functions242656
+Node: Creating a Linker Hash Table244322
+Node: Adding Symbols to the Hash Table246049
+Node: Differing file formats246939
+Node: Adding symbols from an object file248672
+Node: Adding symbols from an archive250808
+Node: Performing the Final Link253207
+Node: Information provided by the linker254438
+Node: Relocating the section contents255577
+Node: Writing the symbol table257313
+Node: Hash Tables260261
+Node: Creating and Freeing a Hash Table261452
+Node: Looking Up or Entering a String262691
+Node: Traversing a Hash Table263933
+Node: Deriving a New Hash Table Type264711
+Node: Define the Derived Structures265766
+Node: Write the Derived Creation Routine266832
+Node: Write Other Derived Routines269461
+Node: BFD back ends270761
+Node: What to Put Where271027
+Node: aout271165
+Node: coff277369
+Node: elf302091
+Node: mmo302936
+Node: File layout303859
+Node: Symbol-table309497
+Node: mmo section mapping313292
+Node: GNU Free Documentation License316935
+Node: BFD Index336649
 
 End Tag Table
Index: gdb-6.5/bfd/po/Make-in
===================================================================
--- gdb-6.5.orig/bfd/po/Make-in	2007-09-18 17:03:23.000000000 +0100
+++ gdb-6.5/bfd/po/Make-in	2007-09-18 17:03:27.000000000 +0100
@@ -1,6 +1,7 @@
 # Makefile for program source directory in GNU NLS utilities package.
 # Copyright (C) 1995, 1996, 1997 by Ulrich Drepper <drepper@gnu.ai.mit.edu>
 # Copyright 2001, 2003, 2006 Free Software Foundation, Inc.
+# Copyright (C) 2006 STMicroelectronics
 #
 # This file may be copied and used freely without restrictions.  It can
 # be used in projects which are not available under the GNU Public License
@@ -254,8 +255,8 @@
 	            -e '/^[ 	]*$$/d' \
 		    -e "s@.*@	$$posrcprefix& \\\\@" < $(srcdir)/$@.in \
 		| sed -e '$$s/\\$$//') > $@-t \
-	    && chmod a-w $@-t \
-	    && mv $@-t $@ )
+	    && mv $@-t $@ \
+	    && chmod a-w $@ )
 
 BLD-POTFILES: BLD-POTFILES.in
 	  ( rm -f $@-t $@ \
@@ -263,8 +264,8 @@
 	            -e '/^[ 	]*$$/d' \
 		    -e "s@.*@	../& \\\\@" < $(srcdir)/$@.in \
 		| sed -e '$$s/\\$$//') > $@-t \
-	    && chmod a-w $@-t \
-	    && mv $@-t $@ )
+	    && mv $@-t $@ \
+	    && chmod a-w $@ )
 
 SRC-POTFILES.in: @MAINT@ ../Makefile
 	cd .. && $(MAKE) po/SRC-POTFILES.in
Index: gdb-6.5/gdb/breakpoint.c
===================================================================
--- gdb-6.5.orig/gdb/breakpoint.c	2007-09-18 17:03:26.000000000 +0100
+++ gdb-6.5/gdb/breakpoint.c	2007-09-19 16:42:24.000000000 +0100
@@ -103,7 +103,7 @@
 static CORE_ADDR adjust_breakpoint_address (CORE_ADDR bpaddr,
                                             enum bptype bptype);
 
-static void describe_other_breakpoints (CORE_ADDR, asection *);
+static void describe_other_breakpoints (CORE_ADDR, asection *, int);
 
 static void breakpoints_info (char *, int);
 
@@ -3781,7 +3781,7 @@
 /* Print a message describing any breakpoints set at PC.  */
 
 static void
-describe_other_breakpoints (CORE_ADDR pc, asection *section)
+describe_other_breakpoints (CORE_ADDR pc, asection *section, int thread)
 {
   int others = 0;
   struct breakpoint *b;
@@ -3801,12 +3801,16 @@
 	  if (!b->pending && (!overlay_debugging || b->loc->section == section))
 	    {
 	      others--;
-	      printf_filtered ("%d%s%s ",
-			       b->number,
+	      printf_filtered ("%d", b->number);
+	      if (b->thread == -1 && thread != -1)
+		printf_filtered (" (all threads)");
+	      else if (b->thread != -1)
+		printf_filtered (" (thread %d)", b->thread);
+	      printf_filtered ("%s%s ",
 			       ((b->enable_state == bp_disabled || 
 				 b->enable_state == bp_shlib_disabled || 
 				 b->enable_state == bp_call_disabled) 
-				? " (disabled)" 
+				? " (disabled)"
 				: b->enable_state == bp_permanent 
 				? " (permanent)"
 				: ""),
@@ -4959,7 +4963,7 @@
 	struct symtab_and_line sal = sals.sals[i];
 
 	if (from_tty)
-	  describe_other_breakpoints (sal.pc, sal.section);
+	  describe_other_breakpoints (sal.pc, sal.section, thread);
 	
 	b = set_raw_breakpoint (sal, type);
 	set_breakpoint_count (breakpoint_count + 1);
Index: gdb-6.5/gdb/ChangeLog.st40
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ gdb-6.5/gdb/ChangeLog.st40	2007-09-18 17:03:27.000000000 +0100
@@ -0,0 +1,135 @@
+2007-01-29  Andrew Stubbs  <andrew.stubbs@st.com>
+
+	Fix INSbl26958:
+	* shtdi.c (shtdi_create_inferior): Use execute_command to run load
+	command instead of using shtdi_load directly.
+
+2007-01-19  Andrew Stubbs  <andrew.stubbs@st.com>
+
+	Fix INSbl26938:
+	* sh-tdep.c (sh_gdbarch_init): Integrate setting of sh_show_regs
+	with setting of everything else. Set sh_show_regs correctly for
+	all new architectures.
+
+2007-01-12  Andrew Stubbs  <andrew.stubbs@st.com>
+
+	Fix INSbl26678:
+	* shtdi.c (shtdi_create_inferior): Remove calls to continue_command.
+
+2006-12-07  Andrew Stubbs  <andrew.stubbs@st.com>
+
+	Fix INSbl26816:
+	* shtdi.c (shtdi_xfer_inferior_memory): Replace error message with
+	returning errno.
+
+2006-11-29  Andrew Stubbs  <andrew.stubbs@st.com>
+
+	Fix INSbl26138:
+	* solib.c (solib_open): Treat bare file names as relative paths.
+
+2006-11-23  Andrew Stubbs  <andrew.stubbs@st.com>
+
+	* value.c (value_of_internalvar): Apply endian fix the float values.
+
+2006-11-23  Andrew Stubbs  <andrew.stubbs@st.com>
+
+	* printcmd.c: Define USE_PRINTF_I64 and PRINTF_HAS_LONG_LONG on MinGW.
+	(printf_command): Convert %lld to %I64d when USE_PRINTF_I64 set.
+	Allow 'l' (ell) modifier for %f.
+
+2006-11-08  Antony King  <antony.king@st.com>
+
+	Fix INSbl26654:
+	* shtdi.c: Added implementation of DllError() for reporting DLL
+	API errors.
+
+2006-11-08  Antony King  <antony.king@st.com>
+
+	Fix INSbl26668:
+	* shtdi.c (shtdi_wait): Convert target signal from SIGTRAP
+	to SIGINT if user has interrupted the target.
+
+2006-10-27  Andrew Stubbs  <andrew.stubbs@st.com>
+
+	* shtdi.c (shtdi_close): Don't Deinitialize if not connected.
+
+2006-10-25  Andrew Stubbs  <andrew.stubbs@st.com>
+
+	Fix INSbl26134:
+	* shtdi.c (shtdi_new_objfile): Don't inform the RTOS awareness when
+	relocatable libraries are loaded.
+
+2006-10-23  Andrew Stubbs  <andrew.stubbs@st.com>
+
+	* symfile.c (struct load_section_data): Add use_vma field.
+	(load_section_callback): Use VMA, instead of LMA, if use_vma set.
+	(generic_load): Handle the new lma or vma option.
+
+2006-10-19  Andrew Stubbs  <andrew.stubbs@st.com>
+
+	* breakpoint.c (describe_other_breakpoints): Add thread parameter.
+	Annotate display with thread number where appropriate.
+	(create_breakpoints): Add thread parameter to call to
+	describe_other_breakpoints.
+
+2006-09-20  Denis Pilat  <denis.pilat@st.com>
+
+	* thread.c (info_threads_command): do not print stack frame information
+	if argument is nostackframe
+
+2006-05-04  Andrew Stubbs  <andrew.stubbs@st.com>
+
+	Fix INSbl15583:
+	* thread.c (valid_thread_id): Call thread_alive() to confirm that
+	the thread table is up to date.
+
+2006-05-04  Andrew Stubbs  <andrew.stubbs@st.com>
+
+	Fix INSbl25741:
+	* frame.c (frame_find_by_id): Apply patch from
+	http://sources.redhat.com/ml/gdb-patches/2006-05/msg00018.html.
+
+2006-03-08  Andrew Stubbs  <andrew.stubbs@st.com>
+
+	* sh-tdep.c (sh_gdbarch_init): Add missing architectures to the switch
+	table so that the registers and such are correct.
+
+2006-03-07  Andrew Stubbs  <andrew.stubbs@st.com>
+
+	* value.c (keep_variable_command): New function.
+	(_initialize_values): Add keep-variable command.
+
+2006-03-07  Andrew Stubbs  <andrew.stubbs@st.com>
+
+	* version.in: Add '-ST40' to the version number.
+
+2006-03-07  Andrew Stubbs  <andrew.stubbs@st.com>
+
+	* sh-tdep.c (backtrace_abi_sniffer): New variable.
+	(sh_frame_this_id): Do nothing if backtrace_abi_sniffer zero.
+	(sh_gdbarch_init): Add set/show abi-sniffer command.
+	* frame.c (set_backtrace_cmdlist): Remove static.
+	(show_backtrace_cmdlist): Likewise.
+	* frame.h (set_backtrace_cmdlist): Add extern declaration.
+	(show_backtrace_cmdlist): Likewise.
+
+2006-03-03  Andrew Stubbs  <andrew.stubbs@st.com>
+
+	* embed.mt (TDEPFILES): Add solib.o solib-svr4.o.
+	* config/sh/tm-sh.h: Include solib.h.
+	(SVR4_SHARED_LIBS, SOLIB_BKPT_NAME): Define.
+	(TARGET_HAS_RELOCATABLE_LIB): Define.
+	* sh-tdep.c (sh_gdbarch_init): Call
+	set_solib_svr4_fetch_link_map_offsets.
+	* solib-svr4.c (enable_break): Add support for
+	TARGET_HAS_RELOCATABLE_LIB.
+
+2006-03-03  Andrew Stubbs  <andrew.stubbs@st.com>
+
+	* cli/cli-cmds.c: Include errno.h, fcntl.h
+	(fork_escape): New function.
+	(init_cli_cmds): Add fork command.
+
+2006-03-03  Andrew Stubbs  <andrew.stubbs@st.com>
+
+	* config/sh/tm-sh.h (GDBINIT_FILENAME): Create to use .shgdbinit.
Index: gdb-6.5/gdb/cli/cli-cmds.c
===================================================================
--- gdb-6.5.orig/gdb/cli/cli-cmds.c	2007-09-18 17:03:26.000000000 +0100
+++ gdb-6.5/gdb/cli/cli-cmds.c	2007-09-18 17:03:27.000000000 +0100
@@ -23,8 +23,10 @@
 
 #ifdef __MINGW32__
 #include <windows.h>
+#include <errno.h>
 #endif
 
+#include <fcntl.h>
 #include <sys/time.h>
 #include <math.h>
 #include "defs.h"
@@ -94,6 +96,8 @@
 
 static void sleep_command(char *, int);
 
+static void fork_escape (char *, int);
+
 /* Prototypes for local utility functions */
 
 static void ambiguous_line_spec (struct symtabs_and_lines *);
@@ -1029,6 +1033,102 @@
 Syntax: sleep seconds [useconds]");
 }
 
+/* ARGSUSED */
+static void
+fork_escape (char *arg, int from_tty)
+{
+  int status, pid;
+  int fd[2];
+  FILE *childstdout;
+  char *execname;
+  char *execargs;
+
+#ifndef __MINGW32__
+  if (pipe(fd) < 0)
+#else
+  if (_pipe(fd, 0, O_BINARY))
+#endif
+    {
+       fprintf_unfiltered (gdb_stderr, "Parent Cannot create pipe %s\n",
+                           safe_strerror (errno));
+       gdb_flush (gdb_stderr);
+    }
+
+  execname = strtok(arg, " ");
+  execargs = arg + strlen(execname) + 1;
+#ifdef __MINGW32__
+  {
+    /* On Windows the arg list to _spawn does not work as it should.
+       Instead of keeping the arguments as given to it flattens them
+       into a string and then splits the string at the spaces and quotes.
+       The whole argument list to the gdb fork command is supposed to be
+       passed as one argument to the child. Therefore, on windows, use
+       quotes to get the right effect. This also requires that any existing
+       quotes are escaped or everything will fall apart. */
+    int count=0,i=0;
+    char *args = execargs;
+
+    /* count the number of double quotes in the arg list */
+    while ( args[i] != '\0' )
+      if ( args[i++] == '"' )
+	count++;
+
+    /* allocate space for the string, the new quotes
+       and the escapes for the old quotes */
+    execargs = alloca(sizeof(char) * (strlen(execargs)+2+count+1));
+
+    /* build the new argument */
+    i=0;
+    execargs[i++] = '"';              /* open quotes */
+    while ( *args != '\0' )
+      {
+	if ( *args == '"' )
+	  execargs[i++] = '\\';       /* escape existing quotes */
+	execargs[i++] = *args++;      /* copy character */
+      }
+    execargs[i++] = '"';              /* close quotes */
+    execargs[i] = '\0';               /* terminate string */
+  }
+#endif
+
+#ifndef __MINGW32__
+  if ((pid = fork ()) == 0)
+#endif
+    {
+       char pipefd[16],pipefd2[16];
+       sprintf (pipefd, "%d", fd[1]);
+       sprintf (pipefd2, "%d", fd[0]);
+
+#ifndef __MINGW32__
+       (void) setsid(); /* Set child to be leader of own process group */
+       execlp (execname, execname, pipefd, pipefd2, execargs, NULL, 0);
+       fprintf_unfiltered (gdb_stderr, "Cannot execute %s: %s\n", execname,
+                           safe_strerror (errno));
+       gdb_flush (gdb_stderr);
+       _exit (0177);
+#else
+       /* note that _spawnlp seems to flatten the argument list
+	  which causes it to get broken at the spaces not the real breaks */
+       if ((pid =_spawnlp (_P_NOWAIT, execname, execname, pipefd, pipefd2, execargs, NULL)) == -1)
+         {
+	   fprintf_unfiltered (gdb_stderr, "Cannot execute %s: %s\n", execname,
+                           safe_strerror (errno));
+	   gdb_flush (gdb_stderr);
+	 }
+#endif
+    }
+
+  close(fd[1]);
+  childstdout = fdopen(fd[0], "r");
+
+  if (pid != -1)
+      read_command_file(childstdout);
+  else
+    error ("Fork failed");
+
+  fclose(childstdout);
+}
+
 static void
 make_command (char *arg, int from_tty)
 {
@@ -1394,6 +1494,16 @@
 With no arguments, run an inferior shell."));
   set_cmd_completer (c, filename_completer);
 
+  c = add_com ("fork", class_support, fork_escape,
+	       "Spawn a plugin process.\n\
+The first argument is the program name.\n\
+The rest are the parameters to pass to the program.\n\
+The program actually starts with:\n\
+  program fdout fdin args ...\n\
+where fdout is a pipe into which GDB commands may be passed\n\
+and fdin is the read end of the same pipe.");
+  set_cmd_completer (c, filename_completer);
+
   c = add_com ("edit", class_files, edit_command, _("\
 Edit specified file or function.\n\
 With no argument, edits file containing most recent line listed.\n\
Index: gdb-6.5/gdb/config/sh/embed.mt
===================================================================
--- gdb-6.5.orig/gdb/config/sh/embed.mt	2007-09-18 17:03:26.000000000 +0100
+++ gdb-6.5/gdb/config/sh/embed.mt	2007-09-19 16:42:24.000000000 +0100
@@ -1,5 +1,5 @@
 # Target: Embedded Renesas Super-H with ICE and simulator
-TDEPFILES= sh-tdep.o sh64-tdep.o monitor.o sh3-rom.o remote-e7000.o ser-e7kpc.o dsrec.o shtdi.o
+TDEPFILES= sh-tdep.o sh64-tdep.o monitor.o sh3-rom.o remote-e7000.o ser-e7kpc.o dsrec.o shtdi.o solib.o solib-svr4.o
 DEPRECATED_TM_FILE= tm-sh.h
 
 SIM_OBS = remote-sim.o
Index: gdb-6.5/gdb/config/sh/tm-sh.h
===================================================================
--- gdb-6.5.orig/gdb/config/sh/tm-sh.h	2007-09-18 17:03:26.000000000 +0100
+++ gdb-6.5/gdb/config/sh/tm-sh.h	2007-09-18 17:03:27.000000000 +0100
@@ -32,3 +32,16 @@
 #define SHTDI_JOINT_HW_BREAK_LIMIT 3
 
 void shtdi_init_simulator_hook ();
+
+/* Change .gdbinit to .shgdbinit so as not to get
+   confused with the host .gdbinit file */
+#define	GDBINIT_FILENAME ".shgdbinit"
+
+/* Dynamic libraries support. Currently used only by RL lib */
+#define SVR4_SHARED_LIBS
+
+#ifdef SVR4_SHARED_LIBS
+#include "solib.h"
+#define SOLIB_BKPT_NAME "_r_debug_state"
+#define TARGET_HAS_RELOCATABLE_LIB
+#endif
Index: gdb-6.5/gdb/frame.c
===================================================================
--- gdb-6.5.orig/gdb/frame.c	2007-09-18 17:03:23.000000000 +0100
+++ gdb-6.5/gdb/frame.c	2007-09-19 16:42:23.000000000 +0100
@@ -2,6 +2,7 @@
 
    Copyright (C) 1986, 1987, 1989, 1991, 1994, 1995, 1996, 1998, 2000,
    2001, 2002, 2003, 2004 Free Software Foundation, Inc.
+   Copyright (C) 2006 STMicroelectronics
 
    This file is part of GDB.
 
@@ -395,16 +396,26 @@
 {
   struct frame_info *frame;
 
+#if 0
   /* ZERO denotes the null frame, let the caller decide what to do
      about it.  Should it instead return get_current_frame()?  */
   if (!frame_id_p (id))
     return NULL;
+#endif
 
   for (frame = get_current_frame ();
        frame != NULL;
        frame = get_prev_frame (frame))
     {
       struct frame_id this = get_frame_id (frame);
+#if 1
+      /* We use an invalid frame id to mean "could not unwind from
+	 here"!  This hack fixes the "value being assigned to is
+	 no longer active" problem.  This strongly suggests that
+	 we need to change the representation.  */
+      if (!frame_id_p (id) && !frame_id_p (this))
+	return frame;
+#endif
       if (frame_id_eq (id, this))
 	/* An exact match.  */
 	return frame;
@@ -1558,8 +1569,8 @@
 
 extern initialize_file_ftype _initialize_frame; /* -Wmissing-prototypes */
 
-static struct cmd_list_element *set_backtrace_cmdlist;
-static struct cmd_list_element *show_backtrace_cmdlist;
+struct cmd_list_element *set_backtrace_cmdlist;
+struct cmd_list_element *show_backtrace_cmdlist;
 
 static void
 set_backtrace_cmd (char *args, int from_tty)
Index: gdb-6.5/gdb/frame.h
===================================================================
--- gdb-6.5.orig/gdb/frame.h	2007-09-18 17:03:23.000000000 +0100
+++ gdb-6.5/gdb/frame.h	2007-09-18 17:03:27.000000000 +0100
@@ -2,6 +2,7 @@
 
    Copyright (C) 1986, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1996,
    1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004 Free Software Foundation, Inc.
+   Copyright (C) 2006 STMicroelectronics
 
    This file is part of GDB.
 
@@ -666,4 +667,9 @@
 extern void deprecated_update_frame_base_hack (struct frame_info *frame,
 					       CORE_ADDR base);
 
+/* Export 'set backtrace' so that new subcommands may be added elsewhere. */
+
+extern struct cmd_list_element *set_backtrace_cmdlist;
+extern struct cmd_list_element *show_backtrace_cmdlist;
+
 #endif /* !defined (FRAME_H)  */
Index: gdb-6.5/gdb/printcmd.c
===================================================================
--- gdb-6.5.orig/gdb/printcmd.c	2007-09-18 17:03:23.000000000 +0100
+++ gdb-6.5/gdb/printcmd.c	2007-09-18 17:03:27.000000000 +0100
@@ -48,6 +48,13 @@
 #include "tui/tui.h"		/* For tui_active et.al.   */
 #endif
 
+#if defined(__MINGW32__)
+# define USE_PRINTF_I64 1
+# define PRINTF_HAS_LONG_LONG
+#else
+# define USE_PRINTF_I64 0
+#endif
+
 extern int asm_demangle;	/* Whether to demangle syms in asm printouts */
 extern int addressprint;	/* Whether to print hex addresses in HLL " */
 
@@ -1980,7 +1987,7 @@
 	      else
 		this_argclass = double_arg;
 
-	      if (lcount || seen_h)
+	      if (seen_h)
 		bad = 1;
 	      break;
 
@@ -2002,8 +2009,23 @@
 		   *f);
 
 	  f++;
-	  strncpy (current_substring, last_arg, f - last_arg);
-	  current_substring += f - last_arg;
+
+	  if (this_argclass == long_long_arg && USE_PRINTF_I64)
+	    {
+	      /* Windows' printf does support long long, but not the usual way.
+		 Convert %lld to %I64d.  */
+	      int length_before_ll = f - last_arg - 1 - lcount;
+	      strncpy (current_substring, last_arg, length_before_ll);
+	      strcpy (current_substring + length_before_ll, "I64");
+	      current_substring[length_before_ll + 3] =
+		last_arg[length_before_ll + lcount];
+	      current_substring += length_before_ll + 4;
+	    }
+	  else
+	    {
+	      strncpy (current_substring, last_arg, f - last_arg);
+	      current_substring += f - last_arg;
+	    }
 	  *current_substring++ = '\0';
 	  last_arg = f;
 	  argclass[nargs_wanted++] = this_argclass;
Index: gdb-6.5/gdb/sh-tdep.c
===================================================================
--- gdb-6.5.orig/gdb/sh-tdep.c	2007-09-18 17:03:26.000000000 +0100
+++ gdb-6.5/gdb/sh-tdep.c	2007-09-19 16:42:24.000000000 +0100
@@ -2299,12 +2299,18 @@
     frame_unwind_register (next_frame, (*realnump), valuep);
 }
 
+static int backtrace_abi_sniffer = 1;
+
 static void
 sh_frame_this_id (struct frame_info *next_frame, void **this_cache,
 		  struct frame_id *this_id)
 {
   struct sh_frame_cache *cache = sh_frame_cache (next_frame, this_cache);
 
+  /* Is this sniffer enabled? */
+  if (!backtrace_abi_sniffer)
+    return;
+
   /* This marks the outermost frame.  */
   if (cache->base == 0)
     return;
@@ -2460,47 +2466,10 @@
 {
   struct gdbarch *gdbarch;
 
-  sh_show_regs = sh_generic_show_regs;
-  switch (info.bfd_arch_info->mach)
+  if (info.bfd_arch_info->mach == bfd_mach_sh5)
     {
-    case bfd_mach_sh2e:
-      sh_show_regs = sh2e_show_regs;
-      break;
-    case bfd_mach_sh2a:
-      sh_show_regs = sh2a_show_regs;
-      break;
-    case bfd_mach_sh2a_nofpu:
-      sh_show_regs = sh2a_nofpu_show_regs;
-      break;
-    case bfd_mach_sh_dsp:
-      sh_show_regs = sh_dsp_show_regs;
-      break;
-
-    case bfd_mach_sh3:
-      sh_show_regs = sh3_show_regs;
-      break;
-
-    case bfd_mach_sh3e:
-      sh_show_regs = sh3e_show_regs;
-      break;
-
-    case bfd_mach_sh3_dsp:
-    case bfd_mach_sh4al_dsp:
-      sh_show_regs = sh3_dsp_show_regs;
-      break;
-
-    case bfd_mach_sh4:
-    case bfd_mach_sh4a:
-      sh_show_regs = sh4_show_regs;
-      break;
-
-    case bfd_mach_sh4_nofpu:
-    case bfd_mach_sh4a_nofpu:
-      sh_show_regs = sh4_nofpu_show_regs;
-      break;
-
-    case bfd_mach_sh5:
       sh_show_regs = sh64_show_regs;
+
       /* SH5 is handled entirely in sh64-tdep.c */
       return sh64_gdbarch_init (info, arches);
     }
@@ -2563,10 +2532,12 @@
   switch (info.bfd_arch_info->mach)
     {
     case bfd_mach_sh:
+      sh_show_regs = sh_generic_show_regs;
       set_gdbarch_register_name (gdbarch, sh_sh_register_name);
       break;
 
     case bfd_mach_sh2:
+      sh_show_regs = sh_generic_show_regs;
       set_gdbarch_register_name (gdbarch, sh_sh_register_name);
       break;
 
@@ -2574,6 +2545,7 @@
       /* doubles on sh2e and sh3e are actually 4 byte. */
       set_gdbarch_double_bit (gdbarch, 4 * TARGET_CHAR_BIT);
 
+      sh_show_regs = sh2e_show_regs;
       set_gdbarch_register_name (gdbarch, sh_sh2e_register_name);
       set_gdbarch_register_type (gdbarch, sh_sh3e_register_type);
       set_gdbarch_fp0_regnum (gdbarch, 25);
@@ -2582,6 +2554,7 @@
       break;
 
     case bfd_mach_sh2a:
+      sh_show_regs = sh2a_show_regs;
       set_gdbarch_register_name (gdbarch, sh_sh2a_register_name);
       set_gdbarch_register_type (gdbarch, sh_sh2a_register_type);
       set_gdbarch_register_sim_regno (gdbarch, sh_sh2a_register_sim_regno);
@@ -2595,6 +2568,7 @@
       break;
 
     case bfd_mach_sh2a_nofpu:
+      sh_show_regs = sh2a_nofpu_show_regs;
       set_gdbarch_register_name (gdbarch, sh_sh2a_nofpu_register_name);
       set_gdbarch_register_sim_regno (gdbarch, sh_sh2a_register_sim_regno);
 
@@ -2604,6 +2578,7 @@
       break;
 
     case bfd_mach_sh_dsp:
+      sh_show_regs = sh_dsp_show_regs;
       set_gdbarch_register_name (gdbarch, sh_sh_dsp_register_name);
       set_gdbarch_register_sim_regno (gdbarch, sh_dsp_register_sim_regno);
       break;
@@ -2611,6 +2586,7 @@
     case bfd_mach_sh3:
     case bfd_mach_sh3_nommu:
     case bfd_mach_sh2a_nofpu_or_sh3_nommu:
+      sh_show_regs = sh3_show_regs;
       set_gdbarch_register_name (gdbarch, sh_sh3_register_name);
       break;
 
@@ -2619,6 +2595,7 @@
       /* doubles on sh2e and sh3e are actually 4 byte. */
       set_gdbarch_double_bit (gdbarch, 4 * TARGET_CHAR_BIT);
 
+      sh_show_regs = sh3e_show_regs;
       set_gdbarch_register_name (gdbarch, sh_sh3e_register_name);
       set_gdbarch_register_type (gdbarch, sh_sh3e_register_type);
       set_gdbarch_fp0_regnum (gdbarch, 25);
@@ -2627,12 +2604,16 @@
       break;
 
     case bfd_mach_sh3_dsp:
+      sh_show_regs = sh3_dsp_show_regs;
       set_gdbarch_register_name (gdbarch, sh_sh3_dsp_register_name);
       set_gdbarch_register_sim_regno (gdbarch, sh_dsp_register_sim_regno);
       break;
 
     case bfd_mach_sh4:
     case bfd_mach_sh4a:
+    case bfd_mach_st40_300:
+    case bfd_mach_st40_300_or_sh4a:
+      sh_show_regs = sh4_show_regs;
       set_gdbarch_register_name (gdbarch, sh_sh4_register_name);
       set_gdbarch_register_type (gdbarch, sh_sh4_register_type);
       set_gdbarch_fp0_regnum (gdbarch, 25);
@@ -2648,15 +2629,21 @@
     case bfd_mach_sh4_nommu_nofpu:
     case bfd_mach_sh2a_nofpu_or_sh4_nommu_nofpu:
     case bfd_mach_sh2a_or_sh4:
+    case bfd_mach_st40_300_nofpu:
+    case bfd_mach_st40_300_nofpu_or_sh2a_nofpu:
+    case bfd_mach_st40_300_nofpu_or_sh4a_nofpu:
+      sh_show_regs = sh4_nofpu_show_regs;
       set_gdbarch_register_name (gdbarch, sh_sh4_nofpu_register_name);
       break;
 
     case bfd_mach_sh4al_dsp:
+      sh_show_regs = sh3_dsp_show_regs;
       set_gdbarch_register_name (gdbarch, sh_sh4al_dsp_register_name);
       set_gdbarch_register_sim_regno (gdbarch, sh_dsp_register_sim_regno);
       break;
 
     default:
+      sh_show_regs = sh_generic_show_regs;
       set_gdbarch_register_name (gdbarch, sh_sh_register_name);
       break;
     }
@@ -2667,6 +2654,22 @@
   frame_unwind_append_sniffer (gdbarch, dwarf2_frame_sniffer);
   frame_unwind_append_sniffer (gdbarch, sh_frame_sniffer);
 
+#ifdef SVR4_SHARED_LIBS
+  set_solib_svr4_fetch_link_map_offsets (gdbarch, svr4_ilp32_fetch_link_map_offsets);
+#endif
+
+  add_setshow_boolean_cmd ("abi-sniffer", class_obscure,
+                           &backtrace_abi_sniffer, "\
+Set whether backtraces should use the ABI where there is no debug info.", "\
+Show whether backtraces should use the ABI where there is no debug info.", "\
+Normally there is debug information from which to construct a backtrace\n\
+but sometimes is is not available (e.g. in assembly code). In this case the\n\
+ABI sniffer can attempt to construct a backtrace. It is disabled by default\n\
+because it can cause inconvenient errors. Note that it does not disable the\n\
+Dwarf debug information sniffer.",
+                           NULL, NULL, &set_backtrace_cmdlist,
+                           &show_backtrace_cmdlist);
+
   return gdbarch;
 }
 
Index: gdb-6.5/gdb/shtdi.c
===================================================================
--- gdb-6.5.orig/gdb/shtdi.c	2007-09-18 17:03:26.000000000 +0100
+++ gdb-6.5/gdb/shtdi.c	2007-09-18 17:03:27.000000000 +0100
@@ -33,13 +33,29 @@
 
 /* DLL utility macros */
 #if defined(__MINGW32__)
+static const char *
+getLastLibraryErrorString (void)
+{
+  static char error[1024];
+
+  if (FormatMessage
+      (FORMAT_MESSAGE_FROM_SYSTEM | FORMAT_MESSAGE_IGNORE_INSERTS |
+       FORMAT_MESSAGE_MAX_WIDTH_MASK, NULL, GetLastError (), 0, error,
+       sizeof (error), NULL) == 0)
+    sprintf (error, "0x%08lx", GetLastError ());
+
+  return error;
+}
+
 #define DllOpen(name)		((void *) LoadLibrary(name))
 #define DllSymbol(handle, name) GetProcAddress((HANDLE)handle, name)
 #define DllClose(handle)	FreeLibrary((HANDLE)handle)
+#define DllError()		getLastLibraryErrorString()
 #else
 #define DllOpen(name)		dlopen(name, RTLD_NOW)
 #define DllSymbol(handle, name) dlsym(handle, name)
 #define DllClose(handle)	(dlclose(handle) == 0)
+#define DllError()		dlerror()
 #endif
 
 /* SHDEBUG interface version */
@@ -223,15 +239,15 @@
 
   shdbgDllHandle = DllOpen (shdbgdllname);
   if (!shdbgDllHandle)
-    error (_("Internal error: unable to open SHDEBUG shared library %s"),
-	   shdbgdllname);
+    error (_("Internal error: unable to open SHDEBUG shared library %s (%s)"),
+	   shdbgdllname, DllError ());
 
 #define LoadSHDEBUGSymbol(s) \
   do { \
     _shdbg_##s = (shdbg_##s##Fn_t)DllSymbol(shdbgDllHandle, "sh_"#s); \
     if (!_shdbg_##s) { \
-      error(_("Internal error: unable to find symbol sh_"#s" in %s"), \
-	    shdbgdllname); \
+      error(_("Internal error: unable to find symbol sh_"#s" in %s (%s)"), \
+	    shdbgdllname, DllError ()); \
     } \
   } while (0)
 
@@ -362,7 +378,8 @@
   UnloadSHDEBUGSymbol (SetIoArgs);
 
   if (shdbgDllHandle && !DllClose (shdbgDllHandle))
-    error (_("Internal error: unable to close SHDEBUG shared library"));
+    error (_("Internal error: unable to close SHDEBUG shared library (%s)"),
+	   DllError ());
 
   shdbgDllHandle = NULL;
 }
@@ -1222,7 +1239,7 @@
 }
 
 /* Test if there is a queued interrupt waiting to be serviced.  */
-static void
+static int
 interrupt_check ()
 {
   if (interrupt_pending)
@@ -1236,7 +1253,11 @@
 
       if (!shdbg_Interrupt ())
 	error (_("Unable to stop target"));
+
+      return 1;
     }
+
+  return 0;
 }
 
 
@@ -1693,15 +1714,15 @@
 	    error (_("Unable to detach from remote target %s"),
 		   shtdi_targetName);
 	}
-    }
 
-  if (!shdbg_DeInitialise ())
-    {
-      if (shtdi_targetissimulator)
-	error (_("Unable to disconnect from simulator target"));
-      else
-	error (_("Unable to disconnect from remote target %s"),
-	       shtdi_targetName);
+      if (!shdbg_DeInitialise ())
+	{
+	  if (shtdi_targetissimulator)
+	    error (_("Unable to disconnect from simulator target"));
+	  else
+	    error (_("Unable to disconnect from remote target %s"),
+		   shtdi_targetName);
+	}
     }
 
   do_cleanups (old_chain);
@@ -1804,10 +1825,7 @@
     rtos_check_symbols (symfile_objfile);
 
   if (exec_file)
-    {
-      shtdi_load (exec_file, 0);
-      continue_command (NULL, 0);
-    }
+    execute_command ("load", 0);
   else
     {
       int argslen = strlen (args);
@@ -1830,7 +1848,6 @@
 	xfree (set_inferior_args (xstrdup ("")));
 
       shtdi_load (execname, 0);
-      continue_command (NULL, 0);
 
       /* Reset args so run with no args works */
       xfree (set_inferior_args (savedargs));
@@ -1892,6 +1909,7 @@
   int result = 0;
   int exitCode = 0;
   int validStop = 0;
+  int interrupted = 0;
 
   /* The standard GDB signal handler is not suitable
      while the target is running because signal must never
@@ -1903,7 +1921,7 @@
   do
     {
       /* Has the signal handler been triggered?  */
-      interrupt_check ();
+      interrupted |= interrupt_check ();
 
       if (remote_debug)
 	fprintf_unfiltered (gdb_stdlog, "calling shdbg_GetState\n");
@@ -1934,7 +1952,7 @@
       break;
     case 1:			/* Target Boot.  */
     case 2:			/* Target Break.  */
-      status->value.sig = 5;
+      status->value.sig = interrupted ? 2 : 5;
       status->kind = TARGET_WAITKIND_STOPPED;
       break;
     case 3:			/* Target Interrupt.  */
@@ -1942,7 +1960,7 @@
       status->kind = TARGET_WAITKIND_STOPPED;
       break;
     default:			/* Unknown reason.  */
-      status->value.sig = 5;
+      status->value.sig = interrupted ? 2 : 5;
       status->kind = TARGET_WAITKIND_STOPPED;
       warning (_("Target stopped for unknown reason (%d)"), result);
       break;
@@ -1988,15 +2006,18 @@
       if (write)
 	{
 	  if (!shdbg_WriteMem ((unsigned long) memaddr, size, myaddr))
-	    error (_("Unable to write to target memory at address 0x%08lx"),
-		   (unsigned long) memaddr);
+	    {
+	      errno = EIO;
+	      return 0;
+	    }
 	}
       else
 	{
 	  if (!shdbg_ReadMem ((unsigned long) memaddr, size, myaddr))
-	    error (_
-		   ("Unable to read from target memory at address 0x%08lx"),
-		   (unsigned long) memaddr);
+	    {
+	      errno = EIO;
+	      return 0;
+	    }
 	}
       len -= size;
       myaddr += size;
@@ -2301,7 +2322,8 @@
 static void
 shtdi_new_objfile (struct objfile *objfile)
 {
-  if (shtdi_targetconnected)
+  if (shtdi_targetconnected
+      && objfile == symfile_objfile)  /* Only check top objfile.  */
     rtos_check_symbols (objfile);
 
   /* Call predecessor on chain, if any. */
Index: gdb-6.5/gdb/solib.c
===================================================================
--- gdb-6.5.orig/gdb/solib.c	2007-09-18 17:03:23.000000000 +0100
+++ gdb-6.5/gdb/solib.c	2007-09-19 16:42:23.000000000 +0100
@@ -147,33 +147,27 @@
   char *temp_pathname = NULL;
   char *p = in_pathname;
 
-  while (*p && !IS_DIR_SEPARATOR (*p))
-    p++;
-
-  if (*p)
+  if (! IS_ABSOLUTE_PATH (in_pathname) || solib_absolute_prefix == NULL)
+    temp_pathname = in_pathname;
+  else
     {
-      if (! IS_ABSOLUTE_PATH (in_pathname) || solib_absolute_prefix == NULL)
-        temp_pathname = in_pathname;
-      else
-	{
-	  int prefix_len = strlen (solib_absolute_prefix);
+      int prefix_len = strlen (solib_absolute_prefix);
 
-	  /* Remove trailing slashes from absolute prefix.  */
-	  while (prefix_len > 0
-		 && IS_DIR_SEPARATOR (solib_absolute_prefix[prefix_len - 1]))
-	    prefix_len--;
-
-	  /* Cat the prefixed pathname together.  */
-	  temp_pathname = alloca (prefix_len + strlen (in_pathname) + 1);
-	  strncpy (temp_pathname, solib_absolute_prefix, prefix_len);
-	  temp_pathname[prefix_len] = '\0';
-	  strcat (temp_pathname, in_pathname);
-	}
-
-      /* Now see if we can open it.  */
-      found_file = open (temp_pathname, O_RDONLY | O_BINARY, 0);
+      /* Remove trailing slashes from absolute prefix.  */
+      while (prefix_len > 0
+	     && IS_DIR_SEPARATOR (solib_absolute_prefix[prefix_len - 1]))
+	prefix_len--;
+
+      /* Cat the prefixed pathname together.  */
+      temp_pathname = alloca (prefix_len + strlen (in_pathname) + 1);
+      strncpy (temp_pathname, solib_absolute_prefix, prefix_len);
+      temp_pathname[prefix_len] = '\0';
+      strcat (temp_pathname, in_pathname);
     }
 
+  /* Now see if we can open it.  */
+  found_file = open (temp_pathname, O_RDONLY | O_BINARY, 0);
+
   /* If the search in solib_absolute_prefix failed, and the path name is
      absolute at this point, make it relative.  (openp will try and open the
      file according to its absolute path otherwise, which is not what we want.)
Index: gdb-6.5/gdb/solib-svr4.c
===================================================================
--- gdb-6.5.orig/gdb/solib-svr4.c	2007-09-18 17:03:23.000000000 +0100
+++ gdb-6.5/gdb/solib-svr4.c	2007-09-19 16:42:23.000000000 +0100
@@ -3,6 +3,7 @@
    Copyright (C) 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1998, 1999,
    2000, 2001, 2003, 2004, 2005, 2006
    Free Software Foundation, Inc.
+   Copyright (C) 2006 STMicroelectronics
 
    This file is part of GDB.
 
@@ -940,6 +1000,10 @@
   char **bkpt_namep;
   asection *interp_sect;
 
+#ifdef TARGET_HAS_RELOCATABLE_LIB
+  asection *dyn_sect;
+#endif
+
   /* First, remove all the solib event breakpoints.  Their addresses
      may have changed since the last time we ran the program.  */
   remove_solib_event_breakpoints ();
@@ -970,6 +1034,13 @@
       bfd_get_section_contents (exec_bfd, interp_sect,
 				buf, 0, interp_sect_size);
 
+#ifdef TARGET_HAS_RELOCATABLE_LIB
+      /* [CL] in the case of the relocatable library, the .interp
+         section is "RL_LIB", so that we know that we must revert to the
+         "bkpt_at_symbol mechanism, without emitting a warning */
+      if (strcmp (buf, "RL_LIB") == 0) goto rlib_check_dyn;
+#endif
+
       /* Now we need to figure out where the dynamic linker was
          loaded so that we can load its symbols and place a breakpoint
          in the dynamic linker itself.
@@ -1073,6 +1144,18 @@
       warning (_("Unable to find dynamic linker breakpoint function.\nGDB will be unable to debug shared library initializers\nand track explicitly loaded dynamic code."));
     }
 
+#ifdef TARGET_HAS_RELOCATABLE_LIB
+ rlib_check_dyn:
+  /* Find the .dynamic section; if not found, it means this is
+     a static executable, so don't bother anymore.
+     Otherwise, we end up setting multiple breakpoints in _start
+     which makes execution stall */
+  dyn_sect = bfd_get_section_by_name (exec_bfd, ".dynamic");
+  if (!dyn_sect) {
+    return 1;
+  }
+#endif
+
   /* Scan through the list of symbols, trying to look up the symbol and
      set a breakpoint there.  Terminate loop when we/if we succeed. */
 
Index: gdb-6.5/gdb/symfile.c
===================================================================
--- gdb-6.5.orig/gdb/symfile.c	2007-09-18 17:03:26.000000000 +0100
+++ gdb-6.5/gdb/symfile.c	2007-09-19 16:42:23.000000000 +0100
@@ -1544,6 +1544,7 @@
   unsigned long write_count;
   unsigned long data_count;
   bfd_size_type total_size;
+  int use_vma;
 };
 
 /* Callback service function for generic_load (bfd_map_over_sections).  */
@@ -1560,7 +1561,8 @@
 	{
 	  gdb_byte *buffer;
 	  struct cleanup *old_chain;
-	  CORE_ADDR lma = bfd_section_lma (abfd, asec) + args->load_offset;
+	  CORE_ADDR lma = (args->use_vma ? bfd_section_vma (abfd, asec)
+			   : bfd_section_lma (abfd, asec)) + args->load_offset;
 	  bfd_size_type block_size;
 	  int err;
 	  const char *sect_name = bfd_get_section_name (abfd, asec);
@@ -1576,8 +1578,10 @@
 
 	  /* Is this really necessary?  I guess it gives the user something
 	     to look at during a long download.  */
-	  ui_out_message (uiout, 0, "Loading section %s, size 0x%s lma 0x%s\n",
-			  sect_name, paddr_nz (size), paddr_nz (lma));
+	  ui_out_message (uiout, 0, "Loading section %s, size 0x%s %s 0x%s\n",
+			  sect_name, paddr_nz (size),
+			  args->use_vma ? "vma" : "lma",
+			  paddr_nz (lma));
 
 	  bfd_get_section_contents (abfd, asec, buffer, 0, size);
 
@@ -1651,11 +1655,13 @@
   struct load_section_data cbdata;
   CORE_ADDR entry;
   char **argv;
+  int i = 1;
 
   cbdata.load_offset = 0;	/* Offset to add to vma for each section. */
   cbdata.write_count = 0;	/* Number of writes needed. */
   cbdata.data_count = 0;	/* Number of bytes written to target memory. */
   cbdata.total_size = 0;	/* Total size of all bfd sectors. */
+  cbdata.use_vma = 0;		/* Load program to LMA by default.  */
 
   argv = buildargv (args);
 
@@ -1667,18 +1673,32 @@
   filename = tilde_expand (argv[0]);
   make_cleanup (xfree, filename);
 
-  if (argv[1] != NULL)
+  if (argv[i] != NULL)
+    {
+      if (strcasecmp (argv[i], "vma") == 0)
+	{
+	  i++;
+	  cbdata.use_vma = 1;
+	}
+      else if (strcasecmp (argv[i], "lma") == 0)
+	{
+	  i++;
+	  cbdata.use_vma = 0;
+	}
+    }
+
+  if (argv[i] != NULL)
     {
       char *endptr;
 
-      cbdata.load_offset = strtoul (argv[1], &endptr, 0);
+      cbdata.load_offset = strtoul (argv[i], &endptr, 0);
 
       /* If the last word was not a valid number then
          treat it as a file name with spaces in.  */
-      if (argv[1] == endptr)
-        error (_("Invalid download offset:%s."), argv[1]);
+      if (argv[i] == endptr)
+        error (_("Invalid download offset:%s."), argv[i]);
 
-      if (argv[2] != NULL)
+      if (argv[i+1] != NULL)
 	error (_("Too many parameters."));
     }
 
Index: gdb-6.5/gdb/thread.c
===================================================================
--- gdb-6.5.orig/gdb/thread.c	2007-09-18 17:03:23.000000000 +0100
+++ gdb-6.5/gdb/thread.c	2007-09-18 17:03:27.000000000 +0100
@@ -214,7 +214,7 @@
   struct thread_info *tp;
 
   for (tp = thread_list; tp; tp = tp->next)
-    if (tp->num == num)
+    if (tp->num == num && thread_alive (tp))
       return 1;
 
   return 0;
@@ -428,8 +428,15 @@
 	printf_filtered (" (%s)", extra_info);
       puts_filtered ("  ");
 
-      switch_to_thread (tp->ptid);
-      print_stack_frame (get_selected_frame (NULL), 0, LOCATION);
+      if ( arg && strcmp(arg, "nostackframe") == 0 )
+         {
+           puts_filtered ("\n");
+         }
+      else
+         {
+           switch_to_thread (tp->ptid);
+           print_stack_frame (get_selected_frame (NULL), 0, LOCATION);
+         }
     }
 
   switch_to_thread (current_ptid);
Index: gdb-6.5/gdb/value.c
===================================================================
--- gdb-6.5.orig/gdb/value.c	2007-09-18 17:03:23.000000000 +0100
+++ gdb-6.5/gdb/value.c	2007-09-18 17:03:27.000000000 +0100
@@ -3,6 +3,7 @@
    Copyright (C) 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994,
    1995, 1996, 1997, 1998, 1999, 2000, 2002, 2003, 2004, 2005, 2006
    Free Software Foundation, Inc.
+   Copyright (c) 2006 STMicroelectronics
 
    This file is part of GDB.
 
@@ -794,6 +795,7 @@
       switch (TYPE_CODE (type))
 	{
 	case TYPE_CODE_INT:
+	case TYPE_CODE_FLT:
 	case TYPE_CODE_PTR:
 	  /* Reverse the bytes.  */
 	  for (i = 0, j = TYPE_LENGTH (type) - 1; i < j; i++, j--)
@@ -1699,6 +1701,12 @@
 	  != RETURN_VALUE_REGISTER_CONVENTION);
 }
 
+/* This is just for backwards compatibility.  */
+static void
+keep_variable_command (char *ignored, int from_tty)
+{
+}
+
 void
 _initialize_values (void)
 {
@@ -1722,4 +1730,7 @@
 Set an internal VARIABLE to the result of the EXPRESSION if it does not\n\
 exist or does not contain a value.  The EXPRESSION is not evaluated if the\n\
 VARIABLE is already initialized."));
+
+  add_com ("keep-variable", no_class, keep_variable_command,
+	   _("Ignored. Kept for backwards compatibility."));
 }
Index: gdb-6.5/gdb/version.in
===================================================================
--- gdb-6.5.orig/gdb/version.in	2007-09-18 17:03:26.000000000 +0100
+++ gdb-6.5/gdb/version.in	2007-09-18 17:03:27.000000000 +0100
@@ -1 +1 @@
-6.5-ST-1.0
+6.5-ST-1.0-ST40-Wyplay
Index: gdb-6.5/include/elf/ChangeLog.st40
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ gdb-6.5/include/elf/ChangeLog.st40	2007-09-18 17:03:27.000000000 +0100
@@ -0,0 +1,3 @@
+2006-03-08  Andrew Stubbs  <andrew.stubbs@st.com>
+
+	* sh.h: Add st40-300 variants.
Index: gdb-6.5/include/elf/sh.h
===================================================================
--- gdb-6.5.orig/include/elf/sh.h	2007-09-18 17:03:23.000000000 +0100
+++ gdb-6.5/include/elf/sh.h	2007-09-18 17:03:27.000000000 +0100
@@ -1,5 +1,6 @@
 /* SH ELF support for BFD.
    Copyright 1998, 2000, 2001, 2002, 2003, 2004, 2005 Free Software Foundation, Inc.
+   Copyright (c) 2006  STMicroelectronics.
 
    This file is part of BFD, the Binary File Descriptor library.
 
@@ -22,7 +23,7 @@
 
 /* Processor specific flags for the ELF header e_flags field.  */
 
-#define EF_SH_MACH_MASK	0x1f
+#define EF_SH_MACH_MASK	0x3f
 #define EF_SH_UNKNOWN	   0 /* For backwards compatibility.  */
 #define EF_SH1		   1
 #define EF_SH2		   2
@@ -47,6 +48,12 @@
 #define EF_SH2A_SH4        23
 #define EF_SH2A_SH3E       24
 
+#define EF_ST40_300_SH2A_NOFPU 50
+#define EF_ST40_300_SH4A_NOFPU 51
+#define EF_ST40_300_NOFPU      52
+#define EF_ST40_300_SH4A       53
+#define EF_ST40_300            54
+
 /* This one can only mix in objects from other EF_SH5 objects.  */
 #define EF_SH5		  10
 
@@ -77,7 +84,15 @@
 /* EF_SH2A_SH4_NOFPU    */ bfd_mach_sh2a_nofpu_or_sh4_nommu_nofpu, \
 /* EF_SH2A_SH3_NOFPU    */ bfd_mach_sh2a_nofpu_or_sh3_nommu, \
 /* EF_SH2A_SH4          */ bfd_mach_sh2a_or_sh4 , \
-/* EF_SH2A_SH3E         */ bfd_mach_sh2a_or_sh3e
+/* EF_SH2A_SH3E         */ bfd_mach_sh2a_or_sh3e, \
+/* 25 - 29              */ 0, 0, 0, 0, 0, \
+/* 30 - 39              */ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
+/* 40 - 49              */ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
+/* EF_ST40_300_SH2A_NOFPU */ bfd_mach_st40_300_nofpu_or_sh2a_nofpu, \
+/* EF_ST40_300_SH4A_NOFPU */ bfd_mach_st40_300_nofpu_or_sh4a_nofpu, \
+/* EF_ST40_300_NOFPU    */ bfd_mach_st40_300_nofpu, \
+/* EF_ST40_300_SH4A     */ bfd_mach_st40_300_or_sh4a, \
+/* EF_ST40_300          */ bfd_mach_st40_300
 
 /* Convert arch_sh* into EF_SH*.  */
 int sh_find_elf_flags (unsigned int arch_set);
Index: gdb-6.5/opcodes/ChangeLog.st40
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ gdb-6.5/opcodes/ChangeLog.st40	2007-09-18 17:03:27.000000000 +0100
@@ -0,0 +1,10 @@
+2006-10-20  Andrew Stubbs  <andrew.stubbs@st.com>
+
+	Fix INSbl25086:
+	* sh-dis.c (print_insn_sh): Remove 0x from output to prevent GDB
+	duplicating it.
+
+2006-03-08  Andrew Stubbs  <andrew.stubbs@st.com>
+
+	* sh-opc.h: Add st40-300 variants.
+	* sh-dis.c: Likewise.
Index: gdb-6.5/opcodes/sh-dis.c
===================================================================
--- gdb-6.5.orig/opcodes/sh-dis.c	2007-09-18 17:03:23.000000000 +0100
+++ gdb-6.5/opcodes/sh-dis.c	2007-09-18 17:03:27.000000000 +0100
@@ -1,6 +1,7 @@
 /* Disassemble SH instructions.
    Copyright 1993, 1994, 1995, 1997, 1998, 2000, 2001, 2002, 2003, 2004, 2005
    Free Software Foundation, Inc.
+   Copyright (c) 2006  STMicroelectronics.
 
    This program is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
@@ -690,6 +691,15 @@
 	    case A_R0:
 	      fprintf_fn (stream, "r0");
 	      break;
+	    case A_R1:
+	      fprintf_fn (stream, "r1");
+	      break;
+	    case A_R2:
+	      fprintf_fn (stream, "r2");
+	      break;
+	    case A_R3:
+	      fprintf_fn (stream, "r3");
+	      break;
 	    case A_REG_N:
 	      fprintf_fn (stream, "r%d", rn);
 	      break;
@@ -924,11 +934,11 @@
 		}
 	      if ((*info->symbol_at_address_func) (val, info))
 		{
-		  fprintf_fn (stream, "\t! 0x");
+		  fprintf_fn (stream, "\t! ");
 		  (*info->print_address_func) (val, info);
 		}
 	      else
-		fprintf_fn (stream, "\t! 0x%x", val);
+		fprintf_fn (stream, "\t! %x", val);
 	    }
 	}
 
Index: gdb-6.5/opcodes/sh-opc.h
===================================================================
--- gdb-6.5.orig/opcodes/sh-opc.h	2007-09-18 17:03:23.000000000 +0100
+++ gdb-6.5/opcodes/sh-opc.h	2007-09-18 17:03:27.000000000 +0100
@@ -1,6 +1,7 @@
 /* Definitions for SH opcodes.
    Copyright 1993, 1994, 1995, 1997, 1999, 2000, 2001, 2002, 2003, 2004,
    2005 Free Software Foundation, Inc.
+   Copyright (c) 2006  STMicroelectronics.
 
    This program is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
@@ -118,6 +119,12 @@
     A_MACL,
     A_PR,
     A_R0,
+ /* For use of the ST40-300 EXPERIMENTAL mulr instructions.
+    Not for submission to the netsources.  */
+    A_R1,
+    A_R2,
+    A_R3,
+ /* End of experimental.  */
     A_R0_GBR,
     A_REG_M,
     A_REG_N,
@@ -212,7 +219,10 @@
 #define arch_sh4_base	    (1 << 5)
 #define arch_sh4a_base	    (1 << 6)
 #define arch_sh2a_base      (1 << 7)
-#define arch_sh_base_mask   MASK (0, 7)
+#define arch_st40_300_base  (1 << 8)
+#define arch_sh4a_st40_300_base (1 << 9)
+#define arch_st40_300_sh2a_base (1 << 10)
+#define arch_sh_base_mask   MASK (0, 10)
 
 /* Bits 8 ... 24 are currently free.  */
 
@@ -252,6 +262,11 @@
 #define arch_sh2a_nofpu_or_sh3_nommu       (arch_sh2a_sh3_base|arch_sh_no_mmu |arch_sh_no_co)
 #define arch_sh2a_or_sh3e                  (arch_sh2a_sh4_base|arch_sh_no_mmu |arch_sh_sp_fpu)
 #define arch_sh2a_or_sh4                   (arch_sh2a_sh4_base|arch_sh_no_mmu |arch_sh_dp_fpu)
+#define arch_st40_300                      (arch_st40_300_base|arch_sh_has_mmu|arch_sh_dp_fpu)
+#define arch_st40_300_or_sh4a              (arch_sh4a_st40_300_base|arch_sh_has_mmu|arch_sh_dp_fpu)
+#define arch_st40_300_nofpu                (arch_st40_300_base|arch_sh_has_mmu|arch_sh_no_co)
+#define arch_st40_300_nofpu_or_sh4a_nofpu  (arch_sh4a_st40_300_base|arch_sh_has_mmu|arch_sh_no_co)
+#define arch_st40_300_nofpu_or_sh2a_nofpu  (arch_st40_300_sh2a_base|arch_sh_no_mmu |arch_sh_no_co)
 
 #define SH_MERGE_ARCH_SET(SET1, SET2) ((SET1) & (SET2))
 #define SH_VALID_BASE_ARCH_SET(SET) (((SET) & arch_sh_base_mask) != 0)
@@ -293,22 +308,32 @@
  |               |          |`--------------------. |
  |               |          |                      \|
  |              SH3-nommu  SH4-nm-nf/SH2A-nofpu    SH3E/SH2A
- |               |\         |          |      \     |    |
- |               | `------. |     SH2A-nofpu   `----+---.|
- |               |         \|            \          |   SH4/SH2A
- |              SH3     SH4-nommu-nofpu   `---------+--. |   |
- |              /|\         |                       |   \|   |
- | .-----------' | `--------+---------------------. |  SH2A  |
- |/              |          /                      \|        |
- |               | .-------'                        |        |
- |               |/                                 |        |
-SH3-dsp         SH4-nofpu                          SH3E      |
- |               |`-------------------------------. | .-----'
- |               |                                 \|/
- |              SH4A-nofpu                         SH4
- | .------------' `-------------------------------. |
- |/                                                \|
-SH4AL-dsp                                          SH4A
+ |               |\         |          |    `-----. |    |
+ |               | \        | ST40-300-nf/SH2A-nf | |    |
+ |               |  \       |     |       |       `-+--. |
+ |               |   `----. |     |      SH2A-nofpu |   \|
+ |               |         \|     `----.   \        |   SH4/SH2A
+ |              SH3  SH4-nommu-nofpu    \   `-------+--. |   |
+ |              /|\         |            \          |   \|   |
+ | .-----------' | `--------+-------------+-------. |  SH2A  |
+ |/              |          |             |        \|        |
+ |               | .--------'             |         |        |
+ |               |/                       |         |        |
+SH3-dsp         SH4-nofpu                 |        SH3E      |
+ |               |`-----------------------+-------. | .------'
+ |               |                        |        \|/
+ |               |                        |        SH4
+ |              SH4A-nofpu/ST40-300-nofpu |         |
+ |               |`.        | .-----------'         |
+ |               | |        |/                      |
+ |               | |       ST40-300-nofpu           |
+ |               | |        `-----------------------+------------.
+ |               | `------------------------------. |            |
+ |               |                                 \|            |
+ |              SH4A-nofpu                         SH4A/ST40-300 |
+ | .------------' `-------------------------------. |    | .-----'
+ |/                                                \|    |/
+SH4AL-dsp                                          SH4A ST40-300
 */
 
 /* Central branches.  */
@@ -323,9 +348,12 @@
 		| arch_sh2a_or_sh3e_up \
 		| arch_sh3_nommu_up)
 #define arch_sh2a_nofpu_or_sh4_nommu_nofpu_up  (arch_sh2a_nofpu_or_sh4_nommu_nofpu \
-		| arch_sh2a_nofpu_up \
+		| arch_st40_300_nofpu_or_sh2a_nofpu_up \
 		| arch_sh2a_or_sh4_up \
 		| arch_sh4_nommu_nofpu_up)
+#define arch_st40_300_nofpu_or_sh2a_nofpu_up   (arch_st40_300_nofpu_or_sh2a_nofpu \
+		| arch_sh2a_nofpu_up \
+		| arch_st40_300_nofpu_up)
 #define arch_sh2a_nofpu_up                     (arch_sh2a_nofpu \
 		| arch_sh2a_up)
 #define arch_sh3_nommu_up                      (arch_sh3_nommu \
@@ -339,7 +367,13 @@
 		| arch_sh4_nofpu_up)
 #define arch_sh4_nofpu_up                      (arch_sh4_nofpu \
 		| arch_sh4_up \
+		| arch_st40_300_nofpu_or_sh4a_nofpu_up)
+#define arch_st40_300_nofpu_or_sh4a_nofpu_up   (arch_st40_300_nofpu_or_sh4a_nofpu \
+		| arch_st40_300_nofpu_up \
+		| arch_st40_300_or_sh4a_up \
 		| arch_sh4a_nofpu_up)
+#define arch_st40_300_nofpu_up                 (arch_st40_300_nofpu \
+		| arch_st40_300_up)
 #define arch_sh4a_nofpu_up                     (arch_sh4a_nofpu \
 		| arch_sh4a_up \
 		| arch_sh4al_dsp_up)
@@ -357,8 +391,12 @@
 #define arch_sh3e_up                           (arch_sh3e \
 		| arch_sh4_up)
 #define arch_sh4_up                            (arch_sh4 \
-		| arch_sh4a_up)
+		| arch_st40_300_or_sh4a_up)
+#define arch_st40_300_or_sh4a_up               (arch_st40_300_or_sh4a \
+		| arch_sh4a_up \
+		| arch_st40_300_up)
 #define arch_sh4a_up                           (arch_sh4a)
+#define arch_st40_300_up                       (arch_st40_300)
 
 /* Left branch.  */
 #define arch_sh_dsp_up                         (arch_sh_dsp  \
@@ -449,7 +487,7 @@
 
 /* 0110nnnnmmmm1101 extu.w <REG_M>,<REG_N>*/{"extu.w",{ A_REG_M,A_REG_N},{HEX_6,REG_N,REG_M,HEX_D}, arch_sh_up},
 
-/* 0000nnnn11100011 icbi @<REG_N>       */{"icbi",{A_IND_N},{HEX_0,REG_N,HEX_E,HEX_3}, arch_sh4a_nofpu_up},
+/* 0000nnnn11100011 icbi @<REG_N>       */{"icbi",{A_IND_N},{HEX_0,REG_N,HEX_E,HEX_3}, arch_st40_300_nofpu_or_sh4a_nofpu_up},
 
 /* 0100nnnn00101011 jmp @<REG_N>        */{"jmp",{A_IND_N},{HEX_4,REG_N,HEX_2,HEX_B}, arch_sh_up},
 
@@ -837,7 +875,7 @@
 
 /* 0110nnnnmmmm1001 swap.w <REG_M>,<REG_N>*/{"swap.w",{ A_REG_M,A_REG_N},{HEX_6,REG_N,REG_M,HEX_9}, arch_sh_up},
 
-/* 0000000010101011 synco               */{"synco",{0},{HEX_0,HEX_0,HEX_A,HEX_B}, arch_sh4a_nofpu_up},
+/* 0000000010101011 synco               */{"synco",{0},{HEX_0,HEX_0,HEX_A,HEX_B}, arch_st40_300_nofpu_or_sh4a_nofpu_up},
 
 /* 0100nnnn00011011 tas.b @<REG_N>      */{"tas.b",{A_IND_N},{HEX_4,REG_N,HEX_1,HEX_B}, arch_sh_up},
 
@@ -1115,7 +1153,7 @@
 /* 1111nnnn01001101 fneg <F_REG_N>     */{"fneg",{F_REG_N},{HEX_F,REG_N,HEX_4,HEX_D}, arch_sh2e_up},
 /* 1111nnn001001101 fneg <D_REG_N>     */{"fneg",{D_REG_N},{HEX_F,REG_N,HEX_4,HEX_D}, arch_sh2a_or_sh4_up},
 
-/* 1111011111111101 fpchg               */{"fpchg",{0},{HEX_F,HEX_7,HEX_F,HEX_D}, arch_sh4a_up},
+/* 1111011111111101 fpchg               */{"fpchg",{0},{HEX_F,HEX_7,HEX_F,HEX_D}, arch_st40_300_or_sh4a_up},
 
 /* 1111101111111101 frchg               */{"frchg",{0},{HEX_F,HEX_B,HEX_F,HEX_D}, arch_sh4_up},
 
@@ -1164,7 +1202,14 @@
   /* 0100mmmm11110000 movml.l <REG_M>,@-R15 */ {"movmu.l",{A_REG_M,A_DEC_R15},{HEX_4,REG_M,HEX_F,HEX_0}, arch_sh2a_nofpu_up},
   /* 0100mmmm11110100 movml.l @R15+,<REG_M> */ {"movmu.l",{A_INC_R15,A_REG_M},{HEX_4,REG_M,HEX_F,HEX_4}, arch_sh2a_nofpu_up},
   /* 0000nnnn00111001 movrt <REG_N> */         {"movrt",{A_REG_N},{HEX_0,REG_N,HEX_3,HEX_9}, arch_sh2a_nofpu_up},
-  /* 0100nnnn10000000 mulr R0,<REG_N> */       {"mulr",{A_R0,A_REG_N},{HEX_4,REG_N,HEX_8,HEX_0}, arch_sh2a_nofpu_up},
+  /* 0100nnnn10000000 mulr R0,<REG_N> */       {"mulr",{A_R0,A_REG_N},{HEX_4,REG_N,HEX_8,HEX_0}, arch_st40_300_nofpu_or_sh2a_nofpu_up},
+
+/* Experimental ST40-300 instructions. Not for submission to the netsources.  */
+  /* 0100nnnn10010000 mulr R1,<REG_N> */       {"mulr",{A_R1,A_REG_N},{HEX_4,REG_N,HEX_9,HEX_0}, arch_st40_300_nofpu_up},
+  /* 0100nnnn10100000 mulr R2,<REG_N> */       {"mulr",{A_R2,A_REG_N},{HEX_4,REG_N,HEX_A,HEX_0}, arch_st40_300_nofpu_up},
+  /* 0100nnnn10110000 mulr R3,<REG_N> */       {"mulr",{A_R3,A_REG_N},{HEX_4,REG_N,HEX_B,HEX_0}, arch_st40_300_nofpu_up},
+/* End of experimental.  */
+
   /* 0000000001101000 nott */                  {"nott",{A_END},{HEX_0,HEX_0,HEX_6,HEX_8}, arch_sh2a_nofpu_up},
   /* 0000000001011011 resbank */               {"resbank",{A_END},{HEX_0,HEX_0,HEX_5,HEX_B}, arch_sh2a_nofpu_up},
   /* 0000000001101011 rts/n */                 {"rts/n",{A_END},{HEX_0,HEX_0,HEX_6,HEX_B}, arch_sh2a_nofpu_up},
Index: gdb-6.5/sim/sh/ChangeLog.st40
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ gdb-6.5/sim/sh/ChangeLog.st40	2007-09-18 17:03:27.000000000 +0100
@@ -0,0 +1,3 @@
+2007-02-22  Andrew Stubbs  <andrew.stubbs@st.com>
+
+	* gencode.c (tab): Correct pre-decrement instructions when m == n.
Index: gdb-6.5/sim/sh/gencode.c
===================================================================
--- gdb-6.5.orig/sim/sh/gencode.c	2007-09-18 17:03:23.000000000 +0100
+++ gdb-6.5/sim/sh/gencode.c	2007-09-18 17:03:27.000000000 +0100
@@ -970,9 +970,11 @@
     "WBAT (R[n] + R0, R[m]);",
   },
   { "n", "nm", "mov.b <REG_M>,@-<REG_N>", "0010nnnnmmmm0100",
+    /* Allow for the case where m == n.  */
+    "int t = R[m];",
     "MA (1);",
     "R[n] -= 1;",
-    "WBAT (R[n], R[m]);",
+    "WBAT (R[n], t);",
   },
   { "n", "n0", "mov.b R0,@<REG_N>+", "0100nnnn10001011",
     "MA (1);",
@@ -1035,9 +1037,11 @@
     "WLAT (R0 + R[n], R[m]);",
   },
   { "n", "nm", "mov.l <REG_M>,@-<REG_N>", "0010nnnnmmmm0110",
+    /* Allow for the case where m == n.  */
+    "int t = R[m];",
     "MA (1) ;",
     "R[n] -= 4;",
-    "WLAT (R[n], R[m]);",
+    "WLAT (R[n], t);",
   },
   { "n", "n0", "mov.l R0,@<REG_N>+", "0100nnnn10101011",
     "MA (1) ;",
@@ -1099,9 +1103,11 @@
     "WWAT (R0 + R[n], R[m]);",
   },
   { "n", "mn", "mov.w <REG_M>,@-<REG_N>", "0010nnnnmmmm0101",
+    /* Allow for the case where m == n.  */
+    "int t = R[m];",
     "MA (1);",
     "R[n] -= 2;",
-    "WWAT (R[n], R[m]);",
+    "WWAT (R[n], t);",
   },
   { "n", "0n", "mov.w R0,@<REG_N>+", "0100nnnn10011011",
     "MA (1);",
Index: gdb-6.5/sim/testsuite/sim/sh/allinsn.exp
===================================================================
--- gdb-6.5.orig/sim/testsuite/sim/sh/allinsn.exp	2007-09-18 17:03:23.000000000 +0100
+++ gdb-6.5/sim/testsuite/sim/sh/allinsn.exp	2007-09-18 17:03:27.000000000 +0100
@@ -6,31 +6,51 @@
 set global_ld_options ""
 
 foreach opt $board_variant_list {
-    switch "x$opt" {
-	x-ml { set global_as_options "-little --defsym LITTLE=1"
-	       set global_ld_options "-EL" }
+    if {[istarget sh-superh-elf]} {
+	# little endian is default
+        set endian little
+	switch "x$opt" {
+	    x-mb { set global_as_options "-big"
+		   set global_ld_options "-EB"
+		   set endian big }
+	}
+    } else {
+        set endian big
+	switch "x$opt" {
+	    x-ml { set global_as_options "-little --defsym LITTLE=1"
+		   set global_ld_options "-EL"
+		   set endian little }
+	}
     }
 }
 
 if [istarget sh-*elf] {
+if {$endian == "big"} {
+    # Some tests don't run in little endian
+    run_sim_test bclr.s   sh
+    run_sim_test bset.s   sh
+    run_sim_test bst.s    sh
+    run_sim_test div.s    sh
+    run_sim_test fcnvds.s sh
+    run_sim_test mov.s    $all
+    run_sim_test movi.s   $all
+    run_sim_test mulr.s   sh
+    run_sim_test resbank.s sh
+    run_sim_test movua.s  $all
+}
     run_sim_test add.s    $all
     run_sim_test and.s    $all
     run_sim_test bandor.s sh
     run_sim_test bandornot.s sh
-    run_sim_test bclr.s   sh
     run_sim_test bld.s    sh
     run_sim_test bldnot.s sh
-    run_sim_test bset.s   sh
-    run_sim_test bst.s    sh
     run_sim_test bxor.s   sh
     run_sim_test clip.s   sh
-    run_sim_test div.s    sh
     run_sim_test dmxy.s   shdsp
     run_sim_test fabs.s   sh
     run_sim_test fadd.s   sh
     run_sim_test fcmpeq.s sh
     run_sim_test fcmpgt.s sh
-    run_sim_test fcnvds.s sh
     run_sim_test fcnvsd.s sh
     run_sim_test fdiv.s   sh
     run_sim_test fipr.s   sh
@@ -52,12 +72,8 @@
     run_sim_test loop.s   shdsp
     run_sim_test macl.s   sh
     run_sim_test macw.s   sh
-    run_sim_test mov.s    $all
-    run_sim_test movi.s   $all
     run_sim_test movli.s  $all
-    run_sim_test movua.s  $all
     run_sim_test movxy.s  shdsp
-    run_sim_test mulr.s   sh
     run_sim_test pabs.s   shdsp
     run_sim_test paddc.s  shdsp
     run_sim_test padd.s   shdsp
@@ -75,7 +91,6 @@
     run_sim_test psub.s   shdsp
     run_sim_test pswap.s  shdsp
     run_sim_test pushpop.s sh
-    run_sim_test resbank.s sh
     run_sim_test sett.s   sh
     run_sim_test shll.s   $all
     run_sim_test shll2.s  $all
Index: gdb-6.5/sim/testsuite/sim/sh/ChangeLog.st40
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ gdb-6.5/sim/testsuite/sim/sh/ChangeLog.st40	2007-09-18 17:03:27.000000000 +0100
@@ -0,0 +1,4 @@
+2006-06-15  Andrew Stubbs  <andrew.stubbs@st.com>
+
+	* allinsn.exp: Add support for sh-superh-elf configuration.
+	Don't test instructions which don't work in the currect endian.
